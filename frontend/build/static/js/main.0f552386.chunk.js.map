{"version":3,"sources":["components/Footer.js","components/User.js","components/Project.js","components/ProjectItems.js","components/ProjectForm.js","components/ToDoForm.js","components/ToDo.js","components/Auth.js","App.js","reportWebVitals.js","index.js"],"names":["Footer","href","target","React","Component","UserItem","user","id","username","first_name","last_name","email","UsersList","users","className","map","ProjectItem","project","deleteProject","to","name","rep_link","onClick","type","ProjectList","projects","todos","ToDoList","forEach","ToDoItem","parseInt","push","text","usersId","find","todo","ProjectItems","useParams","console","log","filtered_projects","filter","ProjectForm","props","state","event","this","setState","value","createProject","preventDefault","selectedOptions","i","length","item","onSubmit","handleSubmit","htmlFor","onChange","handleChange","multiple","handleUserChange","ToDoForm","createToDo","deleteToDo","is_active","date_create","date_update","LoginForm","login","password","get_token","placeholder","NotFound404","location","pathname","App","token","Cookies","set","load_data","set_token","cookies","get","curr_user","axios","post","then","response","data","alert","set_name","catch","error","headers","is_authenticated","get_headers","get_token_from_storage","delete","logout","exact","path","component","User","from","ToDo","Project","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0f552386.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nclass Footer extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p>Все права защищены &copy;&nbsp;2021 <a href=\"https://geekbrains.ru\"\r\n                                                          target=\"_blank\">Geekbrains</a>\r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;","import React from 'react'\r\n\r\n\r\nconst UserItem = ({user}) => {\r\n    return (\r\n        <tr>\r\n            <td>{user.id}</td>\r\n            <td>{user.username}</td>\r\n            <td>{user.first_name}</td>\r\n            <td>{user.last_name}</td>\r\n            <td>{user.email}</td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nconst UsersList = ({users}) => {\r\n    return (\r\n        <table>\r\n            <caption className={\"CaptionTable\"}>Users</caption>\r\n            <thead>\r\n            <th>Id</th>\r\n            <th>Username</th>\r\n            <th>First name</th>\r\n            <th>Last Name</th>\r\n            <th>E-mail</th>\r\n            </thead>\r\n            <tbody>\r\n            {users.map((user) => <UserItem user={user}/>)}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default UsersList\r\n","import React from 'react'\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst ProjectItem = ({project, deleteProject}) => {\r\n    return (\r\n        <tr>\r\n            <td><Link to={`${project.id}`}> {project.name} </Link></td>\r\n            {/*<td>{project.name}</td>*/}\r\n            <td>{project.rep_link}</td>\r\n            <td>{project.users}</td>\r\n            <td>\r\n                <button onClick={() => deleteProject(project.id)} type='button'>Delete</button>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nconst ProjectList = ({projects, deleteProject}) => {\r\n    return (\r\n        <div>\r\n            <table>\r\n                <caption className={\"CaptionTable\"}>Projects</caption>\r\n                <th>Project name</th>\r\n                <th>Project link</th>\r\n                <th>Users</th>\r\n                {projects.map((project) => <ProjectItem project={project} deleteProject={deleteProject}/>)}\r\n            </table>\r\n            <Link to='/projects/create'>Create</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProjectList\r\n","import React from \"react\";\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nconst ProjectItem = ({project, users, todos}) => {\r\n    const ToDoList = []\r\n\r\n    todos.forEach((ToDoItem) => {\r\n        if (ToDoItem.project === parseInt(project.id)) {\r\n            ToDoList.push(ToDoItem.text)\r\n        }\r\n    })\r\n    return (\r\n        <div>\r\n            <table>\r\n                <tr>\r\n                    <td><b>Project:</b></td>\r\n                    <td>{project.name}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td><b>Repository link:</b></td>\r\n                    <td> {project.rep_link}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td><b>Users:</b></td>\r\n                    <td> {project.users.map((usersId) => {\r\n                        return users.find((user) => user.id === usersId).username + ', '\r\n                    })}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td><b>ToDo:</b></td>\r\n                    <td> {ToDoList.map((todo) => todo + ', ')}</td>\r\n                </tr>\r\n            </table>\r\n        </div>\r\n\r\n    )\r\n}\r\nconst ProjectItems = ({projects, users, todos}) => {\r\n    let {id} = useParams();\r\n    console.log(users)\r\n    let filtered_projects = projects.filter((project) => project.id === parseInt(id))\r\n    return (\r\n        <div>\r\n            {filtered_projects.map((project) => <ProjectItem project={project}\r\n                                                             users={users}\r\n                                                             todos={todos}\r\n            />)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectItems;","import React from 'react'\r\n\r\n\r\nclass ProjectForm extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            name: '',\r\n            rep_link: 'http://github.com/',\r\n            users: [],\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState(\r\n            {\r\n                [event.target.name]: event.target.value\r\n            }\r\n        );\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        this.props.createProject(this.state.name, this.state.rep_link, this.state.users)\r\n        console.log(this.state.name + \" \" + this.state.rep_link + \" \" + this.state.users)\r\n\r\n        event.preventDefault()\r\n    }\r\n\r\n    handleUserChange(event) {\r\n        if (!event.target.selectedOptions) {\r\n\r\n            this.setState({\r\n                'users': []\r\n            })\r\n            return;\r\n        }\r\n        let users = []\r\n        for (let i = 0; i < event.target.selectedOptions.length; i++) {\r\n            users.push(event.target.selectedOptions.item(i).value)\r\n        }\r\n        this.setState({\r\n            'users': users\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={(event) => this.handleSubmit(event)}>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"name\">name</label>\r\n                    <input type=\"text\" className=\"form-control\" name=\"name\" value={this.state.name}\r\n                           onChange={(event) => this.handleChange(event)}/>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"rep_link\">repository link</label>\r\n\r\n                    <input type=\"url\" className=\"form-control\" name=\"rep_link\" value={this.state.rep_link}\r\n                           onChange={(event) => this.handleChange(event)}/>\r\n                </div>\r\n\r\n                <div>\r\n                    <label htmlFor=\"users\">users</label>\r\n\r\n                    <select name=\"users\" multiple onChange={(event) => this.handleUserChange(event)}>\r\n                        {this.props.users.map((item) => <option value={item.id}>{item.username}</option>)}\r\n                    </select>\r\n                </div>\r\n\r\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Save\"/>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProjectForm\r\n","import React from 'react'\r\n\r\n\r\nclass ToDoForm extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            project: 0,\r\n            text: '',\r\n            // is_active: '',\r\n            user: 0,\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState(\r\n            {\r\n                [event.target.name]: event.target.value\r\n            }\r\n        );\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        this.props.createToDo(this.state.project, this.state.text, this.state.user)\r\n        console.log(this.state.project + \" \" + this.state.text + \" \" + this.state.user)\r\n\r\n        event.preventDefault()\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={(event) => this.handleSubmit(event)}>\r\n\r\n                <div>\r\n                    <label htmlFor=\"project\">project</label>\r\n\r\n                    <select name=\"project\" className='form-control'\r\n                            onChange={(event) => this.handleChange(event)}>\r\n                        {this.props.projects.map((item) => <option value={item.id}>{item.name}</option>)}\r\n                    </select>\r\n                </div>\r\n\r\n                <div>\r\n                    <label htmlFor=\"user\">user</label>\r\n\r\n                    <select name=\"user\" className='form-control'\r\n                            onChange={(event) => this.handleChange(event)}>\r\n                        {this.props.users.map((item) => <option value={item.id}>{item.username}</option>)}\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"text\">text</label>\r\n\r\n                    <input type=\"text\" className=\"form-control\" name=\"text\" value={this.state.text}\r\n                           onChange={(event) => this.handleChange(event)}/>\r\n                </div>\r\n\r\n                {/*<div className=\"form-group\">*/}\r\n                {/*    <label htmlFor=\"is_active\">is active</label>*/}\r\n\r\n                {/*    <input type=\"radio\" className=\"form-control\" name=\"is_active\" value=\"true\"*/}\r\n                {/*           onChange={(event) => this.handleChange(event)}/>*/}\r\n                {/*    <input type=\"radio\" className=\"form-control\" name=\"is_active\" value=\"false\"*/}\r\n                {/*           onChange={(event) => this.handleChange(event)}/>*/}\r\n                {/*</div>*/}\r\n\r\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Save\"/>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ToDoForm\r\n","import React from 'react'\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst ToDoItem = ({todo, deleteToDo}) => {\r\n    return (\r\n        <tr>\r\n            <td>{todo.project}</td>\r\n            <td>{todo.text}</td>\r\n            <td>{todo.is_active===true ? '+' : '-'}</td>\r\n            <td>{todo.date_create}</td>\r\n            <td>{todo.date_update}</td>\r\n            <td>{todo.user}</td>\r\n            <td>\r\n                <button onClick={() => deleteToDo(todo.id)} type='button'>Delete</button>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nconst ToDoList = ({todos, deleteToDo}) => {\r\n\r\n    return (\r\n        <div>\r\n            <table>\r\n                <caption className={\"CaptionTable\"}>ToDo</caption>\r\n                <th>Project</th>\r\n                <th>Text</th>\r\n                <th>Is active</th>\r\n                <th>Create date</th>\r\n                <th>Update date</th>\r\n                <th>User</th>\r\n                <th></th>\r\n                {todos.map((todo) => <ToDoItem todo={todo} deleteToDo={deleteToDo}/>)}\r\n            </table>\r\n            <Link to='/todos/create'>Create</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ToDoList\r\n","import React from 'react'\r\n\r\n\r\nclass LoginForm extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {login: '', password: ''}\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState(\r\n            {\r\n                [event.target.name]: event.target.value\r\n            }\r\n        );\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        this.props.get_token(this.state.login, this.state.password)\r\n        event.preventDefault()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className={\"LoginForm\"} onSubmit={(event) => this.handleSubmit(event)}>\r\n                <input className={\"InputLogin\"} type=\"text\" name=\"login\" placeholder=\"login\" value={this.state.login}\r\n                       onChange={(event) => this.handleChange(event)}/>\r\n                <input className={\"InputLogin\"} type=\"password\" name=\"password\" placeholder=\"password\" value={this.state.password}\r\n                       onChange={(event) => this.handleChange(event)}/>\r\n                <input className={\"InputLogin\"} type=\"submit\" value=\"Login\"/>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginForm;\r\n","import React from 'react';\nimport Footer from './components/Footer'\nimport './App.css';\nimport styles from './App.css';\nimport {BrowserRouter, Route, Switch, Redirect, Link} from \"react-router-dom\";\nimport axios from 'axios'\nimport UsersList from './components/User.js'\nimport ProjectList from \"./components/Project\";\nimport ProjectItems from \"./components/ProjectItems\";\nimport ProjectForm from \"./components/ProjectForm\";\nimport ToDoForm from \"./components/ToDoForm\";\nimport ToDoList from \"./components/ToDo\";\nimport LoginForm from './components/Auth.js';\nimport Cookies from 'universal-cookie';\n\nconst NotFound404 = ({location}) => {\n    return (\n        <div>\n            <h1>Страница по адресу '{location.pathname}' не найдена</h1>\n        </div>\n    )\n}\n\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            'users': [],\n            'projects': [],\n            'todos': [],\n            'curr_user': ''\n        }\n    }\n\n    set_token(token) {\n        const cookies = new Cookies()\n        cookies.set('token', token)\n        this.setState({'token': token}, () => this.load_data())\n    }\n\n    set_name(username) {\n        const cookies = new Cookies()\n        cookies.set('curr_user', username)\n        this.setState({'curr_user': username})\n        // console.log(this.state['curr_user'])\n    }\n\n    is_authenticated() {\n        return !!this.state.token\n    }\n\n    logout() {\n        this.set_token('')\n        this.state['curr_user'] = ''\n    }\n\n    get_token_from_storage() {\n        const cookies = new Cookies()\n        const token = cookies.get('token')\n        const curr_user = cookies.get('curr_user')\n        this.setState({'token': token}, () => this.load_data())\n        this.setState({'curr_user': curr_user})\n    }\n\n    get_token(username, password) {\n        axios.post('http://127.0.0.1:8000/api-token-auth/', {username: username, password: password})\n            .then(response => {\n                this.set_token(response.data['token'])\n                alert(\"Nice to meet you, \" + username)\n                this.set_name(username)\n            }).catch(error => alert('Неверный логин или пароль'))\n    }\n\n    get_headers() {\n        let headers = {\n            'Content-Type': 'application/json'\n            // `Accept': 'application/json; version=${version}`\n        }\n        if (this.is_authenticated()) {\n            headers['Authorization'] = 'Token ' + this.state.token\n        }\n        return headers\n    }\n\n    load_data() {\n        const headers = this.get_headers()\n        axios.get('http://127.0.0.1:8000/api/users', {headers})\n            .then(response => {\n                const users = response.data\n                this.setState(\n                    {'users': users}\n                )\n            }).catch(error => console.log(error))\n        this.setState({users: []})\n        axios.get('http://127.0.0.1:8000/api/filters/project/', {headers}).then(\n            response => {\n                const projects = response.data\n                this.setState(\n                    {'projects': projects}\n                )\n            }\n        ).catch(error => console.log(error))\n        this.setState({projects: []})\n        axios.get('http://127.0.0.1:8000/api/filters/todo/', {headers}).then(\n            response => {\n                const todos = response.data\n                this.setState(\n                    {'todos': todos}\n                )\n            }\n        ).catch(error => console.log(error))\n        this.setState({todos: []})\n    }\n\n    componentDidMount() {\n        this.get_token_from_storage()\n    }\n\n    deleteProject(id) {\n        const headers = this.get_headers()\n        axios.delete(`http://127.0.0.1:8000/api/filters/project/${id}`, {headers})\n            .then(response => {\n                // this.setState({projects: this.state.projects.project((item) => project.id !== id)})\n\n                this.load_data()\n            }).catch(error => {\n            console.log(error)\n            this.setState({projects: []})\n        })\n    }\n\n    createProject(name, rep_link, users) {\n        const headers = this.get_headers()\n        const data = {name: name, rep_link: rep_link, users: users}\n        axios.post(`http://127.0.0.1:8000/api/filters/project/`, data, {headers})\n            .then(response => {\n                this.load_data()\n            }).catch(error => {\n            console.log(error)\n            this.setState({projects: []})\n        })\n    }\n\n\n    deleteToDo(id) {\n        const headers = this.get_headers()\n        axios.delete(`http://127.0.0.1:8000/api/filters/todo/${id}`, {headers})\n            .then(response => {\n                this.load_data()\n            }).catch(error => console.log(error))\n    }\n\n    createToDo(project, text, user) {\n        const headers = this.get_headers()\n        const data = {\n            project: project,\n            text: text,\n            user: user\n        }\n        axios.post(`http://127.0.0.1:8000/api/filters/todo/`, data, {headers})\n            .then(response => {\n                this.load_data()\n            }).catch(error => {\n            console.log(error)\n            this.setState({todos: []})\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"App Site\">\n\n                <div className=\"Site-content\">\n                    <BrowserRouter>\n                        <div className=\"App-header\">\n                            <nav>\n                                <ul>\n                                    <li>\n                                        <Link to='/'>Users</Link>\n                                    </li>\n                                    <li>\n                                        <Link to='/projects/'>Projects</Link>\n                                    </li>\n                                    <li>\n                                        <Link to='/todos/'>ToDo</Link>\n                                    </li>\n                                    <li>\n                                        {this.is_authenticated() ?\n                                            <Link onClick={() => this.logout()}>Logout</Link> :\n                                            <Link to='/login'>Login</Link>}\n                                    </li>\n                                </ul>\n                                {this.is_authenticated() ?\n                                    <text className={\"Text-user\"}> Current user is: {this.state['curr_user']}</text> :\n                                    <text className={\"Text-user\"}> Current user is: Anonymous User</text>}\n                            </nav>\n                            {/*</BrowserRouter>*/}\n                        </div>\n                        <div className=\"main\">\n                            <content>\n                                {/*<BrowserRouter>*/}\n                                <Switch>\n                                    <Route exact path='/'\n                                           component={() => <UsersList users={this.state.users}/>}\n                                    />\n                                    <Redirect from='/users/' to='/'/>\n\n                                    <Route exact path='/todos/'\n                                           component={() => <ToDoList todos={this.state.todos}\n                                                                      deleteToDo={(id) => this.deleteToDo(id)}/>}\n                                    />\n\n                                    <Route exact path='/todos/create'\n                                           component={() => <ToDoForm users={this.state.users} projects={this.state.projects}\n                                               createToDo={(project, text, user) =>\n                                                   this.createToDo(project, text, user)}\n                                           />}/>\n\n                                    <Route exact path='/projects/'\n                                           component={() => <ProjectList projects={this.state.projects}\n                                                                         deleteProject={(id) => this.deleteProject(id)}/>}\n                                    />\n                                    <Route exact path='/projects/create'\n                                           component={() => <ProjectForm users={this.state.users}\n                                               createProject={(name, rep_link, users) => this.createProject(name, rep_link, users)}\n                                           />}/>\n                                    <Route exact path=\"/projects/:id\"\n                                           component={() => <ProjectItems projects={this.state.projects}\n                                                                          users={this.state.users}\n                                                                          todos={this.state.todos}/>}\n                                    />\n\n                                    <Route exact path='/login' component={() => <LoginForm\n                                        get_token={(username, password) => this.get_token(username, password)}/>}/>\n                                    <Route component={NotFound404}/>\n                                </Switch>\n\n                            </content>\n                        </div>\n                    </BrowserRouter>\n                </div>\n                <footer className={\"App-footer\"}>\n                    <Footer/>\n                </footer>\n            </div>\n        )\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}